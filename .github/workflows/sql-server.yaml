name: sql-server
on:
  push:
    branches:
      - latest
      - dev
      - patch-dev
  pull_request:

env:
  CI: 1
  PRISMA_TELEMETRY_INFORMATION: 'prisma-examples sql-server.yaml'

jobs:
  test:
    defaults:
      run:
        working-directory: databases/sql-server
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      sql-server:
        # Docker Hub image
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: 'Pr1sm4_Pr1sm4'
        # Maps tcp port 1433 on service container to the host
        ports:
          - '1433:1433'
        options: --health-cmd="/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P ${SA_PASSWORD} -Q 'SELECT 1' || exit 1"  --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      DATABASE_URL: sqlserver://127.0.0.1:1433;database=prisma-demo;user=SA;password=Pr1sm4_Pr1sm4;trustServerCertificate=true;encrypt=true

    steps:
      - uses: actions/checkout@v2
      - name: migrate-db
        uses: docker://mcr.microsoft.com/mssql-tools
        with:
          entrypoint: /opt/mssql-tools/bin/sqlcmd
          args: '-S sql-server -U SA -P Pr1sm4_Pr1sm4 -i ./databases/sql-server/schema.sql'
      - name: test localhost
        continue-on-error: true
        uses: docker://mcr.microsoft.com/mssql-tools
        with:
          entrypoint: /opt/mssql-tools/bin/sqlcmd
          args: "-S localhost -U SA -P Pr1sm4_Pr1sm4' -Q 'SELECT 1'"
      - name: test 127.0.0.1
        continue-on-error: true
        uses: docker://mcr.microsoft.com/mssql-tools
        with:
          entrypoint: /opt/mssql-tools/bin/sqlcmd
          args: "-S 127.0.0.1 -U SA -P Pr1sm4_Pr1sm4' -Q 'SELECT 1'"
      - name: test ::1
        continue-on-error: true
        uses: docker://mcr.microsoft.com/mssql-tools
        with:
          entrypoint: /opt/mssql-tools/bin/sqlcmd
          args: "-S ::1 -U SA -P Pr1sm4_Pr1sm4' -Q 'SELECT 1'"
